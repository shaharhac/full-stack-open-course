{"version":3,"sources":["services/personService.js","components/Person.js","components/PersonsList.js","components/PersonForm.js","components/Filter.js","components/Notification.js","components/App.js","index.js"],"names":["baseUrl","axios","get","then","response","console","log","data","newPerson","post","catch","error","id","put","delete","Person","person","onDelete","name","number","onClick","PersonsList","persons","personsList","map","key","PersonForm","onSubmit","onNameChange","onNumberChange","value","onChange","type","Filter","filter","Notification","message","notificationStyle","backgroundColor","fontSize","borderStyle","borderRadius","padding","marginBottom","successStyles","color","errorStyles","style","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","notification","setNotification","useEffect","personService","personsToShow","toLowerCase","includes","showNotification","enabled","setTimeout","event","target","preventDefault","duplicatePerson","find","window","confirm","updatedPerson","concat","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b648c919.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => {\n    console.log(response.data);\n    return response.data;\n  });\n};\n\nconst create = newPerson => {\n  const request = axios.post(baseUrl, newPerson);\n  return request\n    .then(response => response.data)\n    .catch(error => {\n      throw error.response.data;\n    });\n};\n\nconst update = (id, newPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, newPerson);\n  return request.then(response => response.data);\n};\n\nconst deleteOne = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request;\n};\n\nexport default { getAll, create, update, deleteOne };\n","import React from \"react\";\n\nconst Person = ({ person, onDelete }) => {\n  const { id, name, number } = person;\n  return (\n    <div>\n      {name} {number} <button onClick={() => onDelete(id, name)}>delete</button>\n    </div>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\n\nimport Person from \"./Person\";\n\nconst PersonsList = ({ persons, onDelete }) => {\n  const personsList = persons.map(person => (\n    <Person key={person.id} person={person} onDelete={onDelete}></Person>\n  ));\n\n  return <div>{personsList}</div>;\n};\n\nexport default PersonsList;\n","import React from \"react\";\n\nconst PersonForm = ({\n  onSubmit,\n  onNameChange,\n  onNumberChange,\n  name,\n  number\n}) => {\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <div>\n          name: <input value={name} onChange={onNameChange} />\n        </div>\n        <div>\n          number: <input value={number} onChange={onNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <div>\n      <input value={filter} onChange={onChange}></input>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst Notification = ({ message, type }) => {\n  const notificationStyle = {\n    backgroundColor: \"lightgrey\",\n    fontSize: \"20px\",\n    borderStyle: \"solid\",\n    borderRadius: \"5px\",\n    padding: \"10px\",\n    marginBottom: \"10px\"\n  };\n\n  const successStyles = {\n    ...notificationStyle,\n    color: \"green\"\n  };\n\n  const errorStyles = {\n    ...notificationStyle,\n    color: \"red\"\n  };\n\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <div style={type === \"success\" ? successStyles : errorStyles}>\n      {message}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport personService from \"../services/personService\";\n\nimport PersonsList from \"./PersonsList\";\nimport PersonForm from \"./PersonForm\";\nimport Filter from \"./Filter\";\nimport Notification from \"./Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [notification, setNotification] = useState({});\n\n  useEffect(() => {\n    personService.getAll().then(persons => setPersons(persons));\n  }, []);\n\n  const personsToShow = persons.filter(person =>\n    person.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n\n  const showNotification = notification => {\n    setNotification({ enabled: true, ...notification });\n    setTimeout(() => setNotification({ enabled: false }), 2000);\n  };\n\n  const handlePersonDelete = (id, name) => {\n    const result = window.confirm(`are you sure you want to delete ${name}?`);\n\n    if (result) {\n      personService\n        .deleteOne(id)\n        .then(response => {\n          setPersons(persons.filter(person => person.id !== id));\n        })\n        .catch(error => {\n          showNotification({\n            type: \"error\",\n            message: `information of ${name} has already been removed from server`\n          });\n        });\n    }\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    const duplicatePerson = persons.find(person => person.name === newName);\n    if (duplicatePerson) {\n      const replaceNumber = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      );\n\n      if (replaceNumber) {\n        const updatedPerson = { ...duplicatePerson, number: newNumber };\n        personService\n          .update(duplicatePerson.id, updatedPerson)\n          .then(response => {\n            setPersons(\n              persons.map(person =>\n                person.id !== duplicatePerson.id ? person : updatedPerson\n              )\n            );\n\n            showNotification({\n              type: \"success\",\n              message: `updated ${newName} number to ${newNumber}`\n            });\n\n            setNewName(\"\");\n            setNewNumber(\"\");\n          })\n          .catch(error => {\n            showNotification({\n              type: \"error\",\n              message: `information of ${newName} has already been removed from server`\n            });\n          });\n\n        return;\n      }\n    }\n\n    const person = {\n      name: newName,\n      number: newNumber\n    };\n\n    personService\n      .create(person)\n      .then(person => {\n        setPersons(persons.concat(person));\n\n        showNotification({\n          type: \"success\",\n          message: `added ${newName} to phonebook`\n        });\n        setNewName(\"\");\n        setNewNumber(\"\");\n      })\n      .catch(({ error }) => {\n        showNotification({\n          type: \"error\",\n          message: error\n        });\n      });\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {notification.enabled ? (\n        <Notification message={notification.message} type={notification.type} />\n      ) : null}\n      <label>filter shown with</label>\n      <Filter filter={filter} onChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm\n        onSubmit={handleFormSubmit}\n        onNameChange={handleNameChange}\n        onNumberChange={handleNumberChange}\n        name={newName}\n        number={newNumber}\n      />\n      <h2>Numbers</h2>\n      <PersonsList persons={personsToShow} onDelete={handlePersonDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}